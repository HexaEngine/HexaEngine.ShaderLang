#case
#in
((a += b + (c * (d -= (e / (f + (g % h))))))) > ((i && j) || (k ? l : m)) && (n |= o) && !(p ^ q) ? r++ : --s;
#ast
[TernaryExpression] ID: 1 Span: ((a += b + (c * (d -= (e / (f + (g % h))))))) > ((i && j) || (k ? l : m)) && (n |= o) && !(p ^ q) ? r++ : --s (Line: 1 Column: 1)
  [BinaryExpression] ID: 2 Span: ((a += b + (c * (d -= (e / (f + (g % h))))))) > ((i && j) || (k ? l : m)) && (n |= o) && !(p ^ q) (Line: 1 Column: 1)
    [AssignmentExpression] ID: 3 Span: ((a += b + (c * (d -= (e / (f + (g % h))))))) (Line: 1 Column: 1)
      [BinaryExpression] ID: 4 Span:  (Line: 1 Column: 1)
        [MemberReferenceExpression] ID: 5 Span: a (Line: 1 Column: 3)
        [BinaryExpression] ID: 6 Span: b + (c * (d -= (e / (f + (g % h))))) (Line: 1 Column: 8)
          [MemberReferenceExpression] ID: 7 Span: b (Line: 1 Column: 8)
          [BinaryExpression] ID: 8 Span: (c * (d -= (e / (f + (g % h))))) (Line: 1 Column: 12)
            [MemberReferenceExpression] ID: 9 Span: c (Line: 1 Column: 13)
            [AssignmentExpression] ID: 10 Span: (d -= (e / (f + (g % h)))) (Line: 1 Column: 17)
              [BinaryExpression] ID: 11 Span:  (Line: 1 Column: 1)
                [MemberReferenceExpression] ID: 12 Span: d (Line: 1 Column: 18)
                [BinaryExpression] ID: 13 Span: (e / (f + (g % h))) (Line: 1 Column: 23)
                  [MemberReferenceExpression] ID: 14 Span: e (Line: 1 Column: 24)
                  [BinaryExpression] ID: 15 Span: (f + (g % h)) (Line: 1 Column: 28)
                    [MemberReferenceExpression] ID: 16 Span: f (Line: 1 Column: 29)
                    [BinaryExpression] ID: 17 Span: (g % h) (Line: 1 Column: 33)
                      [MemberReferenceExpression] ID: 18 Span: g (Line: 1 Column: 34)
                      [MemberReferenceExpression] ID: 19 Span: h (Line: 1 Column: 38)
              [MemberReferenceExpression] ID: 20 Span: d (Line: 1 Column: 18)
      [MemberReferenceExpression] ID: 21 Span: a (Line: 1 Column: 3)
    [BinaryExpression] ID: 22 Span: ((i && j) || (k ? l : m)) && (n |= o) && !(p ^ q) (Line: 1 Column: 49)
      [BinaryExpression] ID: 23 Span: ((i && j) || (k ? l : m)) && (n |= o) (Line: 1 Column: 49)
        [BinaryExpression] ID: 24 Span: ((i && j) || (k ? l : m)) (Line: 1 Column: 49)
          [BinaryExpression] ID: 25 Span: (i && j) (Line: 1 Column: 50)
            [MemberReferenceExpression] ID: 26 Span: i (Line: 1 Column: 51)
            [MemberReferenceExpression] ID: 27 Span: j (Line: 1 Column: 56)
          [TernaryExpression] ID: 28 Span: (k ? l : m) (Line: 1 Column: 62)
            [MemberReferenceExpression] ID: 29 Span: k (Line: 1 Column: 63)
            [MemberReferenceExpression] ID: 30 Span: l (Line: 1 Column: 67)
            [MemberReferenceExpression] ID: 31 Span: m (Line: 1 Column: 71)
        [AssignmentExpression] ID: 32 Span: (n |= o) (Line: 1 Column: 78)
          [BinaryExpression] ID: 33 Span:  (Line: 1 Column: 1)
            [MemberReferenceExpression] ID: 34 Span: n (Line: 1 Column: 79)
            [MemberReferenceExpression] ID: 35 Span: o (Line: 1 Column: 84)
          [MemberReferenceExpression] ID: 36 Span: n (Line: 1 Column: 79)
      [PrefixExpression] ID: 37 Span: (p ^ q) (Line: 1 Column: 91)
        [BinaryExpression] ID: 38 Span: p ^ q (Line: 1 Column: 92)
          [MemberReferenceExpression] ID: 39 Span: p (Line: 1 Column: 92)
          [MemberReferenceExpression] ID: 40 Span: q (Line: 1 Column: 96)
  [PostfixExpression] ID: 41 Span: r++ (Line: 1 Column: 101)
    [MemberReferenceExpression] ID: 42 Span: r (Line: 1 Column: 101)
  [PrefixExpression] ID: 43 Span: --s (Line: 1 Column: 107)
    [MemberReferenceExpression] ID: 44 Span: s (Line: 1 Column: 109)